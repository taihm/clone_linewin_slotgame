// Effect Syntax Guide: https://docs.cocos.com/creator/manual/zh/shader/index.html

CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: sprite-vs:vert
      frag: fs:frag
      properties: &props
        alphaThreshold: { value: 0.5 }
  - name: transparent
    passes:
    - vert: sprite-vs:vert
      frag: fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%

CCProgram sprite-vs %{
  precision highp float;
  #include <cc-global>
  
  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 i_color;
  out vec2 uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);

    #if USE_PIXEL_ALIGNMENT
      pos = cc_matView * pos;
      pos.xyz = floor(pos.xyz);
      pos = cc_matProj * pos;
    #else
      pos = cc_matViewProj * pos;
    #endif

    uv0 = a_texCoord;
    i_color = a_color;

    return pos;
  }
}%

CCProgram fs %{
  precision highp float;
  #include <cc-global>
  #include <alpha-test>


  #if USE_TEXTURE  
    #include <sprite-texture>
    //老版本引用
    //#include <cc-sprite-texture>
  #endif

  in vec4 i_color;
  in vec2 uv0;


  vec4 frag () {
    vec4 o = i_color;
    #if USE_TEXTURE  
        o = texture(cc_spriteTexture, uv0);
    #endif
    o.rgb = mix(o.rgb, i_color.rgb, i_color.a);
    ALPHA_TEST(o);
    return o;
  }
}%