// Effect Syntax Guide: https://docs.cocos.com/creator/manual/zh/shader/index.html

CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: sprite-vs:vert 
      frag: fs:frag
      properties: &props
        _halfLineHeight: { value: 20,editor: { range: [0,100,[1]] }}
        _speed: { value: 100,editor: { range: [0,200,[10]] }}
        _color:      { value: [1, 1, 1, 1], editor: { type: color } }
        _textureSize:   { value: [100,100] }                              #textrueSize尺寸
  - name: transparent
    passes:
    - vert: sprite-vs:vert 
      frag: fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%

CCProgram sprite-vs %{
  precision highp float;
  #include <cc-global>
  
  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 i_color;
  out vec2 uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);


    #if USE_PIXEL_ALIGNMENT
      pos = cc_matView * pos;
      pos.xyz = floor(pos.xyz);
      pos = cc_matProj * pos;
    #else
      pos = cc_matViewProj * pos;
    #endif

    uv0 = a_texCoord;
    i_color = a_color;

    return pos;
  }
}%



CCProgram fs %{
  precision highp float;
  #include <cc-global>

  #if USE_TEXTURE  
    #include <sprite-texture>
    //老版本引用
    //#include <cc-sprite-texture>
  #endif

  in vec4 i_color;
  in vec2 uv0;

   uniform Constant {
    vec4  _color;
    vec2  _textureSize; 
    float _halfLineHeight; 
    float _speed;
  };



   //转换成像素点的坐标
  vec2 changePixel(vec2 uv,vec2 size)
  {
    return uv*size;  
  } 


  vec4 frag () {
   
    vec4 color = _color;
    color.a = 0.0;
    vec2 v1 = changePixel(uv0,_textureSize);
    float px = cc_time.x * _speed;
    float h =  mod(v1.y+ px,_halfLineHeight*2.0); 

    
    if(h >_halfLineHeight)
    {
        h = h - _halfLineHeight;
        float val = h/_halfLineHeight;
        val = 1.0 - val;
        color.a = val+0.2;
    }
    else
    {
        float val = h/_halfLineHeight;
        color.a = val+0.2;
    }

    #if USE_TEXTURE  
        color = texture(cc_spriteTexture, uv0) * color ;
    #endif
    return color;
  }
}%
